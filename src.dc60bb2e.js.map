{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/Paddle.js","src/partials/Ball.js","src/partials/Score.js","src/partials/Shoot.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","BOARD_COLOR","BOARD_WIDTH","BOARD_HEIGHT","PADDLE_COLOR","PADDLE_WIDTH","PADDLE_HEIGHT","PADDLE_GAP","PADDLE_SPEED","BALL_RADIUS","BALL_COLOR","BALL_SPEED","POINTS_TBALLS","TEXT_SIZE","MAX_POINT","SHOOT_WIDTH","SHOOT_HEIGHT","SHOOT_COLOR","KEYS","p1up","p1down","p1shoot","p2up","p2down","p2shoot","paused","Board","width","height","svg","board","document","createElementNS","setAttributeNS","appendChild","line","Paddle","boardHeight","x","y","upKey","downKey","speed","shootKey","shoot","score","addEventListener","event","key","moveUp","moveDown","shootY","Math","max","min","left","top","right","bottom","paddle","Ball","radius","boardWidth","direction","ping","Audio","PingSound","point","Point","reset","vx","vy","floor","random","abs","paddle1","paddle2","hitTop","hitBottom","hitLeft","hitRight","play","increaseScore","hitWall","checkTop","checkBottom","p2Walls","getCoordinates","p1Walls","ball","ballMove","wallCollision","paddleColision","Score","size","player","winText","textContent","getScore","console","log","creatWinTex","scoreText","Shoot","shootMove","Game","element","gameElement","getElementById","ball2","shoot1","shoot2","setSpeed","innerHTML","render","shootHit","shootMiss","gameWin","resetScore","game","gameLoop","requestAnimationFrame"],"mappings":"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","file":"src.dc60bb2e.js","sourceRoot":"..","sourcesContent":["// settings.js\n// SVG\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\n// BOARD\nexport const BOARD_COLOR = \"#27A4F2\";\nexport const BOARD_WIDTH = 512;\nexport const BOARD_HEIGHT = 256;\n// PADDLE\nexport const PADDLE_COLOR = \"#F20505\";\nexport const PADDLE_WIDTH = 8;\nexport const PADDLE_HEIGHT = 56;\nexport const PADDLE_GAP = 10;\nexport const PADDLE_SPEED = 15;\n// Ball\nexport const BALL_RADIUS = 8;\nexport const BALL_COLOR = \"#F20505\";\nexport const BALL_SPEED = 1;\n// 2 BALLS\nexport const POINTS_TBALLS = 5;\n// Score\nexport const TEXT_SIZE = 60;\nexport const MAX_POINT = 8;\n// Shoot\nexport const SHOOT_WIDTH = 20;\nexport const SHOOT_HEIGHT = 4;\nexport const SHOOT_COLOR = \"#F20505\";\n// KEYS\nexport const KEYS = {\n    p1up: 'w',\n    p1down: 's',\n    p1shoot: 'd', \n    p2up: 'ArrowUp',        \n    p2down: 'ArrowDown',  \n    p2shoot: 'ArrowLeft', \n    paused: ' ', \n  }","import { SVG_NS, BOARD_COLOR, PADDLE_COLOR } from '../settings';\n\nexport default class Board {\n    constructor(width, height) {\n      this.width = width;\n      this.height = height;\n    }\n    render(svg) {\n      //Create Board\n      let board = document.createElementNS(SVG_NS, \"rect\");\n      board.setAttributeNS(null, \"width\", this.width);\n      board.setAttributeNS(null, \"height\", this.height);\n      board.setAttributeNS(null, \"x\", 0);\n      board.setAttributeNS(null, \"y\", 0);\n      board.setAttributeNS(null, \"fill\", BOARD_COLOR);\n      svg.appendChild(board);\n\n      //Create Net\n      let line = document.createElementNS(SVG_NS, \"line\");\n      line.setAttributeNS(null, \"x1\", this.width/2);\n      line.setAttributeNS(null, \"y1\", 0);\n      line.setAttributeNS(null, \"x2\", this.width/2);\n      line.setAttributeNS(null, \"y2\", this.height);\n      line.setAttributeNS(null, \"stroke-width\", 4);\n      line.setAttributeNS(null, \"stroke-dasharray\", \"5, 5\");\n      line.setAttributeNS(null, \"stroke\", PADDLE_COLOR);\n      svg.appendChild(line);\n    // <line stroke=\"#fff\" stroke-dasharray=\"5,5\" stroke-width=\"4\" y2=\"256\" x2=\"256\" y1=\"0\" x1=\"256\"/>\n    }\n  }","import { SVG_NS, PADDLE_COLOR } from '../settings';\n\nexport default class Paddle {\n    constructor(width, height, boardHeight, x, y, upKey, downKey, speed, shootKey, shoot) {\n      this.width = width;\n      this.height = height;\n      this.boardHeight = boardHeight;\n      this.x = x;\n      this.y = y;\n      this.score = 0;\n      this.speed = speed;\n      this.shoot = false;\n\n      document.addEventListener(\"keydown\", event => {\n        switch (event.key) {\n          case upKey:\n            this.moveUp();\n            break;\n          case downKey:\n            this.moveDown();\n            break;\n        }\n      });\n\n      document.addEventListener(\"keydown\", event => {\n        if(event.key === shootKey){\n          if(this.shoot === false){\n            this.shootY = this.y; \n            this.shoot = true;\n          }\n        }\n      });\n    };\n    // Moving the paddles\n    moveUp(){\n        this.y = Math.max(this.y - this.speed, 0);\n    };\n    moveDown(){\n        this.y = Math.min(this.y + this.speed, this.boardHeight - this.height);\n    };\n    getCoordinates(){\n        return{\n            left: this.x,\n            top: this.y,\n            right: this.x + this.width,\n            bottom: this.y + this.height,\n        }\n    };\n    increaseScore(){\n        this.score = this.score + 1;\n    }\n    resetScore(){\n        this.score = 0;\n    }\n    getScore(){\n        return this.score;\n    }\n    setSpeed(speed){\n        this.speed = speed;   \n    }\n\n    render(svg) {\n      // Create the SVG\n      let paddle = document.createElementNS(SVG_NS, \"rect\");\n      paddle.setAttributeNS(null, \"width\", this.width);\n      paddle.setAttributeNS(null, \"height\", this.height);\n      paddle.setAttributeNS(null, \"x\", this.x);\n      paddle.setAttributeNS(null, \"y\", this.y);\n      paddle.setAttributeNS(null, \"fill\", PADDLE_COLOR);\n\n      svg.appendChild(paddle);\n    }\n  }","import { SVG_NS, BALL_COLOR } from '../settings';\nimport PingSound from '../../public/sounds/tennisball.wav';\nimport Point from '../../public/sounds/hooray.wav';\n\n\nexport default class Ball {\n    constructor(radius, boardWidth, boardHeight, speed) {\n      this.radius = radius;\n      this.boardWidth = boardWidth;\n      this.boardHeight = boardHeight;\n      this.direction = 1;\n      this.ping = new Audio(PingSound);\n      this.point = new Audio(Point);\n      this.speed = speed;\n      this.reset();\n    }\n    ballMove(){\n        this.x = this.x + this.vx;\n        this.y = this.y + this.vy;\n    }\n    reset(){\n        this.x = this.boardWidth/2;\n        this.y = this.boardHeight/2;\n        this.vy = 0;\n        while(this.vy === 0) {\n            this.vy = Math.floor((Math.random() * 10) -5);\n        };\n        this.vx = this.direction * (6 - Math.abs(this.vy));\n    }\n    wallCollision(paddle1, paddle2){\n        const hitTop = (this.y - this.radius <= 0);\n        const hitBottom = (this.y + this.radius >= this.boardHeight);\n        const hitLeft = (this.x  - this.radius < 0);\n        const hitRight = (this.x  + this.radius > this.boardWidth);\n        if(hitTop || hitBottom){\n            this.vy = this.vy * (-1);\n        }\n        if(hitLeft){\n            this.direction = 1;\n            this.point.play();\n            paddle2.increaseScore();\n            this.reset();\n        }\n        if(hitRight){\n            this.direction = -1;\n            this.point.play(); \n            paddle1.increaseScore();\n            this.reset();\n        }\n    }\n    paddleColision(paddle1, paddle2){\n        let hitWall = false, checkTop = false, checkBottom = false;\n        if(this.vx > 0){\n            const p2Walls = paddle2.getCoordinates();\n            hitWall = (this.x + this.radius >= p2Walls.left);\n            checkTop =  (this.y - this.radius >= p2Walls.top);\n            checkBottom = (this.y + this.radius <= p2Walls.bottom);\n        }   else {\n            const p1Walls = paddle1.getCoordinates();\n            hitWall = (this.x - this.radius <= p1Walls.right);\n            checkTop =  (this.y - this.radius >= p1Walls.top);\n            checkBottom = (this.y + this.radius <= p1Walls.bottom);\n        }    \n        if(hitWall && checkTop && checkBottom){\n            this.ping.play();\n            if(this.vx > 0){\n                this.vx = this.vx + this.speed;\n            } else {\n                this.vx = this.vx - this.speed;\n            }\n            this.vx = this.vx * (-1);\n        } \n    }\n  \n    render(svg, paddle1, paddle2) {\n      // Create the SVG\n      let ball = document.createElementNS(SVG_NS, \"circle\");\n      ball.setAttributeNS(null, \"r\", this.radius);\n      ball.setAttributeNS(null, \"cx\", this.x);\n      ball.setAttributeNS(null, \"cy\", this.y);\n      ball.setAttributeNS(null, \"fill\", BALL_COLOR);\n\n      svg.appendChild(ball);\n\n      this.ballMove();\n      this.wallCollision(paddle1, paddle2);\n      this.paddleColision(paddle1, paddle2);\n    }\n  }","import { SVG_NS , MAX_POINT} from '../settings';\n\nexport default class Score{\n    constructor(x, y, size){\n        this.x = x;\n        this.y = y;\n        this.size = size;\n    }\n    creatWinTex(svg, player){ \n        let winText = document.createElementNS(SVG_NS, \"text\");\n        winText.setAttributeNS(null, \"font-size\", 50);\n        winText.setAttributeNS(null, \"x\", 50);\n        winText.setAttributeNS(null, \"y\", 100);\n        winText.setAttributeNS(null, \"fill\", 'white'); \n        winText.textContent = 'WIN GAME ' + player + ' !';\n        svg.appendChild(winText);\n    }\n    \n    gameWin(svg, paddle1, paddle2) {\n        if(paddle1.getScore() === MAX_POINT){\n            console.log(paddle1, ' resetting score');\n            this.creatWinTex(svg, 'P1');\n            return true;\n        } \n        if(paddle2.getScore() === MAX_POINT){ \n            console.log(paddle2, ' resetting score');\n            this.creatWinTex(svg, 'P2');\n            return true;\n        } else{\n            return false;\n        }\n    }\n    \n    render(svg, paddle1, paddle2){\n        let scoreText = document.createElementNS(SVG_NS, \"text\");\n        scoreText.setAttributeNS(null, \"font-size\", this.size);\n        scoreText.setAttributeNS(null, \"x\", this.x);\n        scoreText.setAttributeNS(null, \"y\", this.y);\n        scoreText.setAttributeNS(null, \"fill\", 'white');        \n        scoreText.textContent = paddle1.getScore() + ' ' + paddle2.getScore();\n        svg.appendChild(scoreText);\n    }\n}"," import { SVG_NS, SHOOT_HEIGHT, SHOOT_WIDTH, SHOOT_COLOR , BOARD_WIDTH} from '../settings';\n\nexport default class Shoot {\n    constructor(x, direction, paddle1, paddle2){\n        this.x = x;\n        this.width = SHOOT_WIDTH;\n        this.height = SHOOT_HEIGHT;\n        this.direction = direction;\n    }\n    shootMove(){\n        this.x = this.x + (3 * this.direction);\n    }\n    shootMiss(paddle1, paddle2){\n        const hitLeft = (this.x + SHOOT_WIDTH < 0);\n        const hitRight = (this.x - SHOOT_HEIGHT > BOARD_WIDTH);\n        if(hitRight){\n            paddle1.shoot = false;\n            this.x = paddle1.x; \n        }\n        if(hitLeft){\n            paddle2.shoot = false;\n            this.x = paddle2.x;\n        }\n    }\n    shootHit(paddle1, paddle2){\n        let hitWall = false, checkTop = false, checkBottom = false;\n        if(this.direction > 0){\n            const p2Walls = paddle2.getCoordinates();\n            hitWall = (this.x >= p2Walls.left);\n            checkTop =  (this.y >= p2Walls.top);\n            checkBottom = (this.y <= p2Walls.bottom);\n        } else {\n            const p1Walls = paddle1.getCoordinates();\n            hitWall = (this.x <= p1Walls.left);\n            checkTop =  (this.y >= p1Walls.top);\n            checkBottom = (this.y <= p1Walls.bottom);\n        }\n        if(hitWall && checkTop && checkBottom){\n            if(this.direction > 0){\n                console.log('Hit P2!');\n                paddle1.increaseScore();\n                paddle1.shoot = false;\n                this.x = paddle1.x;\n            } else{\n                console.log('Hit P1!');\n                paddle2.increaseScore();\n                paddle2.shoot = false;\n                this.x = paddle2.x;\n            }\n        }\n    }\n    render(svg, y){\n        let shoot = document.createElementNS(SVG_NS, \"rect\");\n        shoot.setAttributeNS(null, \"width\", this.width);\n        shoot.setAttributeNS(null, \"height\", this.height);\n        shoot.setAttributeNS(null, \"x\", this.x);\n        this.y = y;\n        shoot.setAttributeNS(null, \"y\", this.y);\n        shoot.setAttributeNS(null, \"fill\", SHOOT_COLOR);\n        \n        svg.appendChild(shoot);\n        this.shootMove();\n    }\n}","import {\n  SVG_NS,\n  PADDLE_HEIGHT,\n  PADDLE_WIDTH,\n  PADDLE_GAP,\n  PADDLE_SPEED,\n  BALL_RADIUS,\n  BALL_SPEED,\n  TEXT_SIZE,\n  POINTS_TBALLS,\n  KEYS\n} from '../settings';\nimport Board from './Board';\nimport Paddle from './Paddle';\nimport Ball from './Ball';\nimport Score from './Score';\nimport Shoot from './Shoot';\n\nexport default class Game {\n  constructor(element, width, height) {\n      this.element = element;\n      this.width = width;\n      this.height = height;\n      this.gameElement = document.getElementById(this.element);\n      this.board = new Board(this.width, this.height);\n      this.paddle1 = new Paddle(PADDLE_WIDTH, PADDLE_HEIGHT, this.height, PADDLE_GAP, (this.height / 2) - PADDLE_HEIGHT / 2, KEYS.p1up, KEYS.p1down, PADDLE_SPEED, KEYS.p1shoot);\n      this.paddle2 = new Paddle(PADDLE_WIDTH, PADDLE_HEIGHT, this.height, this.width - PADDLE_GAP - PADDLE_WIDTH, (this.height / 2) - PADDLE_HEIGHT / 2, KEYS.p2up, KEYS.p2down, PADDLE_SPEED, KEYS.p2shoot);\n      this.ball = new Ball(BALL_RADIUS, this.width, this.height, BALL_SPEED);\n      this.ball2 = new Ball(BALL_RADIUS, this.width, this.height, BALL_SPEED);\n      this.paused = false;\n      this.score = new Score(this.width / 2 - 55, 50 , TEXT_SIZE);\n      this.shoot1 = new Shoot(this.paddle1.x, 1);\n      this.shoot2 = new Shoot(this.paddle2.x, -1);\n      document.addEventListener(\"keydown\", event => {\n        if(event.key === KEYS.paused){\n          this.paddle1.setSpeed(PADDLE_SPEED);\n          this.paddle2.setSpeed(PADDLE_SPEED);\n          this.paused = !(this.paused);\n        }\n      });\n  }\n  render() {\n    if(this.paused){\n      this.paddle1.setSpeed(0);\n      this.paddle2.setSpeed(0);\n      return;\n    }\n      // Reset the SVG\n      this.gameElement.innerHTML = '';\n      // Create the SVG\n      let svg = document.createElementNS(SVG_NS, \"svg\");\n      svg.setAttributeNS(null, \"width\", this.width);\n      svg.setAttributeNS(null, \"height\", this.height);\n      svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\n      this.gameElement.appendChild(svg);\n      // Render elements\n      this.board.render(svg);\n      this.paddle1.render(svg);\n      this.paddle2.render(svg);\n      this.ball.render(svg, this.paddle1, this.paddle2);\n      // Set 2 balls in the game\n      if(this.paddle1.score > POINTS_TBALLS || this.paddle2.score > POINTS_TBALLS){\n          this.ball2.render(svg, this.paddle1, this.paddle2);\n      }\n      this.score.render(svg, this.paddle1, this.paddle2);\n      // Shooting\n      if(this.paddle1.shoot === true){\n        this.shoot1.render(svg, this.paddle1.shootY + PADDLE_HEIGHT / 2, this.paddle1, this.paddle2);\n        this.shoot1.shootHit(this.paddle1, this.paddle2);\n        this.shoot1.shootMiss(this.paddle1, this.paddle2);\n      }\n      if(this.paddle2.shoot === true){\n        this.shoot2.render(svg, this.paddle2.shootY + PADDLE_HEIGHT / 2, this.paddle1, this.paddle2);\n        this.shoot2.shootHit(this.paddle1, this.paddle2);\n        this.shoot2.shootMiss(this.paddle1, this.paddle2);\n      }\n      // Set game win\n      if(this.score.gameWin(svg, this.paddle1, this.paddle2)){\n        this.paused = true;\n        this.paddle1.resetScore();\n        this.paddle2.resetScore();\n      }\n  }\n}","import './styles/game.css';\nimport Game from './partials/Game';\nimport { BOARD_WIDTH, BOARD_HEIGHT} from \"./settings\";\n\n// create a game instance\nconst game = new Game('game', BOARD_WIDTH, BOARD_HEIGHT);\n\n(function gameLoop() {\n  game.render();\n  requestAnimationFrame(gameLoop);\n})();\n"]}